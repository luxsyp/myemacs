;; Vire les espaces pas cool
(add-hook 'write-file-hooks 'delete-trailing-whitespace)

;; Voir les espaces pas cool
(setq-default show-trailing-whitespace t)

;; Save ~ --> folder in cu
(setq backup-directory-alist
    '(("." . "~/.emacs-backup-files/")))

;; save cursor
(require 'saveplace)
(setq-default save-place t)

(custom-set-faces
  ;; custom-set-faces was added by Custom -- don't edit or cut/paste it!
  ;; Your init file should contain only one such instance.
 '(background "blue")
 '(font-lock-builtin-face ((((class color) (background dark)) (:foreground "Turquoise"))))
 ;; commentaires
 '(font-lock-comment-face ((t (:foreground "#FF4F4F"))))
 ;; maccro NULL / etc
 '(font-lock-constant-face ((((class color) (background dark)) (:bold t :foreground "#F0A0FF"))))
 ;; i don't know tom
 '(font-lock-doc-string-face ((t (:foreground "green2"))))
 ;; funct name
 '(font-lock-function-name-face ((t (:foreground "PaleGreen"))))
 ;; language c if/else/struct/
 '(font-lock-keyword-face ((t (:bold t :foreground "SkyBlue"))))
 ;; les include les define
 '(font-lock-preprocessor-face ((t (:italic nil :foreground "SkyBlue"))))
 ;; useless
 '(font-lock-reference-face ((t (:foreground "PaleGreen"))))
 ;; string color
 '(font-lock-string-face ((t (:foreground "PaleGreen"))))
 ;; int char etc
 '(font-lock-type-face ((t (:foreground "SkyBlue"))))
 ;; variable name
 '(font-lock-variable-name-face ((t (:foreground "PaleGreen"))))
 '(font-lock-warning-face ((((class color) (background dark)) (:foreground "yellow" :background "red"))))
 '(highlight ((t (:background "#4E4E4E" :height 1.0 :weight bold))))
 '(list-mode-item-selected ((t (:background "gold"))))
 '(makefile-space-face ((t (:background "wheat"))))
 ;; ligne du bas
 '(modeline ((t (:background "yellow"))))
 '(paren-match ((t (:background "darkseagreen4"))))
 ;; surligne
 '(region ((t (:background "DarkSlateBlue"))))
 '(show-paren-match-face ((t (:foreground "black" :background "wheat"))))
 '(show-paren-mismatch-face ((((class color)) (:foreground "white" :background "red"))))
 ;; SPEED BAR
 '(speedbar-button-face ((((class color) (background dark)) (:foreground "green4"))))
 '(speedbar-directory-face ((((class color) (background dark)) (:foreground "khaki"))))
 '(speedbar-file-face ((((class color) (background dark)) (:foreground "cyan"))))
 '(speedbar-tag-face ((((class color) (background dark)) (:foreground "Springgreen"))))
 '(vhdl-speedbar-architecture-selected-face ((((class color) (background dark)) (:underline t :foreground "Blue"))))
 '(vhdl-speedbar-entity-face ((((class color) (background dark)) (:foreground "darkGreen"))))
 '(vhdl-speedbar-entity-selected-face ((((class color) (background dark)) (:underline t :foreground "darkGreen"))))
 '(vhdl-speedbar-package-face ((((class color) (background dark)) (:foreground "black"))))
 '(vhdl-speedbar-package-selected-face ((((class color) (background dark)) (:underline t :foreground "black"))))
 '(widget-field-face ((((class grayscale color) (background light)) (:background "DarkBlue")))))


(add-to-list 'load-path (expand-file-name "~/comp/"))
 (require 'auto-complete)
(global-auto-complete-mode t)
(setq ac-auto-start 3)

;; Speedbar

(fset 'yes-or-no-p 'y-or-n-p)
(global-set-key [delete] 'delete-char)
(global-set-key [kp-delete] 'delete-char)
(global-set-key [backward-delete-char] 'backward-delete-char)
(global-set-key [f8] 'speedbar)
(column-number-mode 1)
(show-paren-mode)
;(speedbar)
(tool-bar-mode nil)
(menu-bar-mode nil)
(scroll-bar-mode -1)

;current line
(custom-set-variables
 '(global-hl-line-mode t))

; add time
(display-time)
(setq display-time-24hr-format t)  ;; Format 24 heures

; unmove cursor
(setq scroll-preserve-screen-position t)
